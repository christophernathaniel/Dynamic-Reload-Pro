{"version":3,"file":"App.js","mappings":";0HAIA,MAAMA,EAAc,EAAGC,MAAKC,aAExB,MAAMC,EAAa,IACZF,EACHG,QAAU,EACVC,WAAa,QAIVC,EAAGC,GAAa,IAAI,EAAAC,SAASN,EAAQ,IAAKC,IAEjC,IAAI,EAAAM,eAAeC,SAASC,cAAc,YACjCC,OAAO,oBAAqB,eAsBrD,MAAO,CACHC,gBAfoB,KACpB,MAAMC,GAAK,IAAAC,QAEET,EAAEU,KAAK,iBAAiBF,kBAAmBA,oDACnDG,IAAYV,EAAUF,WAAaE,EAAUH,QAAUG,EAAUH,QAAU,CAAC,IAC5Ea,GAAmBV,EAAUF,aAC7BY,IAAYV,EAAUH,QAAU,EAAU,KAG/CE,EAAEU,KAAK,eAAeF,gCAAkC,KAAM,MAAOG,GAAmB,IAExFX,EAAEY,QAAQ,EAKb,+GCpCL,MAAMC,EAAa,EAAGlB,MAAKC,aAEvB,MAAMC,EAAa,IACbF,EACHI,WAAa,cACbe,YAAc,KAIXd,EAAGC,GAAa,IAAI,EAAAC,SAASN,EAAQ,IAAKC,IAK3CkB,GAHU,IAAI,EAAAZ,eAAeC,SAASC,cAAc,YAAYW,YAGpD,CACdC,aAAeN,GACHA,EAAW,MAAIA,EAAMO,MAAQ,IAEzCC,cAAgBR,GACL,IAEXS,gBAAkBT,GACR,OAed,MAAO,CACHJ,gBAXoB,KACpB,MAAMC,GAAK,IAAAC,QAEXL,SAASiB,iBAAiBzB,EAAS,WAAW0B,SAASC,KACnD,IAAAC,UAASxB,EAAG,CAACuB,QAAOR,EAAWP,EAAG,IAGtCR,EAAEY,QAAQ,EAKb,uECqZJ,MAAMa,EACF,WAAAC,GACIC,KAAKC,MAAQ,GACbD,KAAKE,gBAAkB,IAAIC,eAC/B,CAEA,aAAMC,CAAQC,EAAKC,GACf,MAAMC,EAAU,CAAEF,IAAKA,EAAKC,kBAE5BN,KAAKC,MAAMO,KAAKD,GAEhB,UACUP,KAAKS,cACf,CAAE,MAAOC,GACLC,QAAQD,MAAM,kCAAmCA,EACrD,CACJ,CAEA,kBAAMD,GACF,KAAOT,KAAKC,MAAMW,OAAS,GAAG,CAC1B,MAAM,IAAEP,EAAG,eAAEC,GAAmBN,KAAKC,MAAMY,SACrC,OAAEC,GAAWd,KAAKE,gBAExB,IACI,MAAMa,QAAiBC,MAAMX,EAAK,CAAES,WAEpC,IAAKC,EAASE,GACV,MAAM,IAAIC,MAAM,6BAA6Bb,cAAgBU,EAASI,UAAUJ,EAASK,cAQ7F,MAAMC,QAAaN,EAASO,OAE5B,IAAKD,GAAqC,IAA7BE,OAAOC,KAAKH,GAAMT,OAC3B,MAAM,IAAIM,MAAM,+BAA+Bb,KAGnDC,EAAee,EACnB,CAAE,MAAOX,GACLC,QAAQD,MAAM,+CAA+CL,KAAQK,EACzE,CACJ,CACJ,CAEA,SAAAe,GACIzB,KAAKE,gBAAgBwB,QACrB1B,KAAKE,gBAAkB,IAAIC,gBAC3BH,KAAKC,MAAQ,EACjB,EA4IJ0B,EAAOC,QAAU,CACbrD,SA9nBJ,MACI,WAAAwB,CAAY8B,MAAWvD,IAenB,OAdA0B,KAAK8B,UAAY,GACjB9B,KAAK+B,UAAY,GACjB/B,KAAKgC,aAAe,GACpBhC,KAAKiC,KAAOJ,EACZ7B,KAAKkC,WAAa5D,EAUX,CAAC0B,KAAM1B,EAClB,CAIA,QAAA6D,CAASC,GAEL,MAAMC,EAAeC,OAAOF,GAE5B,IAAIG,EAAMvC,KAAK+B,UAAUS,MAAKC,GAAOH,OAAOG,EAAIF,OAASF,IAEzD,OAAOE,GAAKG,UAAY,IAC5B,CAEAC,iBAAoBC,GAET5C,KAAK+B,UAAUS,MAAKC,GAAOA,EAAI,UAAYG,IAGtDC,oBAAuBD,GAEZ5C,KAAKgC,aAAaQ,MAAKC,GAAOA,EAAI,UAAYG,IAIzD,SAAAE,CAAUC,GACN,MAAMC,EAAU,kBAChB,IAAIC,EAASF,EAEb,MAAMG,EAAQH,EAAIG,MAAMF,GACxB,IAAIG,EAEJ,GAAID,EAAO,CACP,MAAME,EAAeF,EAAM,GAAGG,OAC9BF,EAAgBnD,KAAKkC,WAAWkB,GAI5BH,OADkBK,IAAlBH,EACSJ,EAAIQ,QAAQP,EAASG,GAErB,IAEjB,CAEA,MAAO,CAAEF,OAAQA,EAAQ1D,MAAO4D,EAClC,CAIFK,eAAkBC,IAEd,MACMC,EAAWD,EAAOP,MADZ,kBAENN,EAAWc,EAAWA,EAAS,GAAK,KAIpCR,EAAQO,EAAOP,MADP,sBAER3D,EAAQ2D,EAAQA,EAAM,GAAK,KAI3BS,EAAiBF,EAAOP,MADZ,qBAEKS,GAAiBA,EAAe,GAG1C,QAAVpE,GACCqE,SAAS5D,KAAK2C,iBAAiBC,IAAWF,UAIjC,UAAVnD,GACCS,KAAK2C,iBAAiBC,IAAWF,SAASmB,iBAAiB,SAAS,KAAQ7D,KAAK8D,qBAAqBlB,EAAS,IAItG,UAAVrD,GACCS,KAAK2C,iBAAiBC,IAAWF,SAASmB,iBAAiB,SAAS,KAAQ7D,KAAK8D,qBAAqBlB,EAAS,GACnH,EAIJkB,qBAAwBlB,IACpB,IAAIgB,EAAW5D,KAAK6C,oBAAoBD,IAAWgB,SAC/CG,EAAe/D,KAAK6C,oBAAoBD,IAAWmB,aAEnDN,GADkBzD,KAAK6C,oBAAoBD,GAClC5C,KAAK6C,oBAAoBD,GAAUa,QAE5CO,EAAmB,KACnBC,EAAiB,KAErB,GAAGL,EAAU,CACT,IAAIX,EAASW,EAAS5D,KAAK2C,iBAAiBC,IAAWF,UACnDO,IAGAe,EAAmBf,EAE3B,CAOA,GAJAjD,KAAKkE,YAAYT,EAAQO,GAItBD,EAAc,CACb,IAAId,EAASc,EAAa/D,KAAK2C,iBAAiBC,IAAWF,UAC3D,IAAIO,EACA,OAAO,EAEPgB,EAAiBhB,CAEzB,CAEAjD,KAAKmE,iBAAiBV,EAAQQ,EAAe,EAUjDC,YAAc,CAACT,EAAQW,KACnB,MACMlB,EAAQO,EAAOP,MADP,kBAERN,EAAWM,EAAQA,EAAM,GAAK,KAGhCkB,IACAA,EAAYpE,KAAKqE,eAAeZ,GAAQlE,YAI5B+D,IAAbc,GAIApE,KAAKqE,eAAeZ,GAAQlE,QAAUS,KAAK6C,oBAAoBD,IAAWrD,OAEtES,KAAK6C,oBAAoBD,IAAWrD,QAGuC,UAArES,KAAK2C,iBAAiBC,IAAWF,UAAU4B,QAAQC,eACpDvE,KAAK6C,oBAAoBD,GAAUrD,MAAS6E,EAC5CpE,KAAK2C,iBAAiBC,GAAUF,SAASnD,MAAQ6E,IAEjDpE,KAAK6C,oBAAoBD,GAAUrD,MAAQ6E,EAC3CpE,KAAK2C,iBAAiBC,GAAUF,SAAS8B,UAAYJ,GAGhE,EAILC,eAAkBZ,GACXzD,KAAK8C,UAAUW,GACPzD,KAAK8C,UAAUW,GAGnB,KAKXU,iBAAmB,CAACV,EAAQgB,EAAW,QACnC,MACMvB,EAAQO,EAAOP,MADP,qBAERN,EAAWM,EAAQA,EAAM,GAAK,KAEpC,GAAe,MAAZN,EAAoB,OACLA,EAAS8B,MAAM,KAErB/E,SAAQ4C,IAChBvC,KAAK2E,iBAAiBpC,EAAKkC,EAAS,GACtC,EAMNE,iBAAmB,CAAC/B,EAAU6B,KACtBA,IACAA,EAAWzE,KAAKqE,iBAAiB9E,OAGjCS,KAAK2C,iBAAiBC,KAIuB,OAA9C5C,KAAK6C,oBAAoBD,IAAWrD,MAEsC,UAArES,KAAK2C,iBAAiBC,IAAWF,UAAU4B,QAAQC,eAEnDvE,KAAK6C,oBAAoBD,GAAUrD,MAASkF,EAC5CzE,KAAK2C,iBAAiBC,GAAUF,SAASnD,MAASkF,IAGlDzE,KAAK6C,oBAAoBD,GAAUrD,MAAQkF,EAC3CzE,KAAK2C,iBAAiBC,GAAUF,SAAS8B,UAAYC,GAGzD9D,QAAQiE,IAAI,2BAChB,EAGJ,IAAA7F,CAAK0E,EAAQG,EAAW,KAAMG,EAAe,KAAMc,EAAkB,MAGjE,IAAIC,EAAa9E,KAAKqE,eAAeZ,GAGrCzD,KAAKkE,YAAYT,GAIA,MACb,MAAMsB,EAAgB/E,KAAKgC,aAAaQ,MAAKC,GAAOA,EAAIgB,SAAWA,IAEnE,GAAGsB,EACQ/E,KAAK2C,iBAAiBoC,EAAc,QAElD,EANgB,GAAjB,MASKC,EAAoB,MACrB,MACMC,EAAUxB,EAAOP,MADP,wDACyB,GACnCgC,EAAa,CAAC,EAOpB,OALAD,EAAQtF,SAAQuD,IACZ,MAAOiC,EAAeC,GAAkBlC,EAAMwB,MAAM,KACpDQ,EAAWC,GAAiBC,EAAe7B,QAAQ,KAAM,GAAG,IAGzD2B,CACV,EAXwB,GAyBnBG,GAVc,MAChB,MACMC,EADiB,2BACaC,KAAK9B,GACzB6B,GAAeA,EAAa,GAAGjC,MAGlD,EANmB,GAUArD,KAAK2C,iBAAiBqC,EAAkB,UAC5D,GAAIK,EAAa,CACb,MAAM,SAAE3C,GAAa2C,EACfG,EAAkB,CAAC,EAEzB,IAAK,MAAOL,EAAeC,KAAmB7D,OAAOkE,QAAQT,GACrDG,EAAcO,WAAW,KAEzBF,EAAgBL,EAAcQ,MAAM,IAAMP,EAG1CI,EAAgBL,GAAiBC,EAUzC,OALA7D,OAAOkE,QAAQD,GAAiB7F,SAAQ,EAAEiG,EAAMrG,MAChC,QAATqG,GAA2B,YAATA,GAA+B,WAATA,GAC3ClD,EAASmD,aAAaD,EAAMrG,EAAM,IAG/BmD,CACX,CAGA,MAAMoD,EAAWrH,SAASsH,cAAc,YACxCD,EAAStB,UAAYM,EAAW7B,OAAOI,OACvC,MAAMX,EAAWoD,EAASE,QAAQC,WAI/BrC,IACClB,EAASwD,aAAa,YACtBxD,EAASmB,iBAAiBnB,EAASwD,aAAa,YAAY,KACxDtC,IAAW,KAAK,KAKxB5D,KAAK+B,UAAUvB,KAAK,CAAE,OAAQkC,EAASwD,aAAa,QAASxD,SAAUA,EAAUyD,OAAQ,OAEzFnG,KAAKgC,aAAaxB,KAAK,CACnB,OAAQkC,EAASwD,aAAa,QAC9B,WAAaxD,EAASwD,aAAa,YACnC,UAAWxD,EAASwD,aAAa,YAAc,KAC/C,UAAWxD,EAASwD,aAAa,YAAc,KAC/C,WAAYxD,EAASwD,aAAa,aAAe,KACjD,UAAWxD,EAASwD,aAAa,YAAc,KAC/CE,MAAOpG,KAAK+B,UAAUnB,OAAS,EAC/ByF,MAAO3D,EAAS4D,UAChBzH,GAAI6D,EAASwD,aAAa,MAC1B7E,KAAMqB,EAAS6D,QACf9C,OAAQA,GAAU,GAClBlE,MAAQuF,EAAWvF,OAAS,GAC5B4G,OAASzD,EAASwD,aAAa,UAAY,KAC3CtC,SAAUA,GAAY,KACtBG,aAAcA,GAAgB,KAC9Bc,gBAAiBA,GAAmB,OAKxC,IAAI5G,EAASQ,SAASC,cAAcsB,KAAKiC,MAYzC,OAVGjC,KAAK2C,iBAAiBD,EAASwD,aAAa,aAAaxD,SACxDzE,EAAS+B,KAAK2C,iBAAiBD,EAASwD,aAAa,aAAaxD,SAC5DA,EAASwD,aAAa,aAC5BjI,EAASQ,SAASC,cAAcgE,EAASwD,aAAa,aAG1DjI,EAAOuI,YAAY9D,GACnB1C,KAAKwD,eAAeC,GAGbf,GAAY,IACvB,CAEAzD,OAAS,KACLe,KAAKgC,aAAarC,SAAQC,IAgBtB,GAfGA,EAAK,aAAgC,IAAlBA,EAAK,UACC,UAArBA,EAAK,aACPI,KAAK8D,qBAAqBlE,EAAK,SAIjCA,EAAK,YAILA,EAAK,YACJI,KAAK8D,qBAAqBlE,EAAK,YAIhCA,EAAsB,gBAAG,CACxBe,QAAQiE,IAAI,OASZ,IAAIrF,EAAQK,EAAsB,kBAE/BL,IAGCoB,QAAQiE,IAAIhF,EAAK,SACjBe,QAAQiE,IAAI,YACZjE,QAAQiE,IAAIrF,GAEZS,KAAK2E,iBAAiB/E,EAAK,QAASL,GAE5C,IACF,GAgQNM,SAzPa,CAACxB,EAAGoE,EAAKrD,EAAWP,KACjC,IAAIe,EAAO6C,EAAI7C,KAKX6G,EAAS,CACT,WAAY7G,EAAKsG,aAAa,aAAe,KAC7C,UAAYtG,EAAKsG,aAAa,WAAWxB,MAAM,KAAKgC,KAAIC,GAAO9H,EAAK8H,IAAKC,KAAK,MAAQ,KACtF,OAAShH,EAAKsG,aAAa,QAAQxB,MAAM,KAAKgC,KAAIC,GAAO9H,EAAK8H,IAAKC,KAAK,MAAQ,KAChF,UAAWhH,EAAKsG,aAAa,YAAc,KAC3CG,MAAOzG,EAAKsG,aAAa,UAAY,KACrCrH,GAAKe,EAAKsG,aAAa,OAAS,KAChCW,MAAQjH,EAAKsG,aAAa,UAAY,KACtCY,KAAOlH,EAAK0E,QAAQC,cACpBhF,MAAOK,EAAKL,OAAS,MAGzB,MAAMwH,EAAa,OAGnB,IAAIC,EAAY,CACZpD,SAAUhE,EAAKsG,aAAa,YAAc9G,EAAUQ,EAAKsG,aAAa,aAAea,EACrFhD,aAAcnE,EAAKsG,aAAa,gBAAkB9G,EAAUQ,EAAKsG,aAAa,iBAAmBa,EACjGlC,gBAAiBjF,EAAKsG,aAAa,mBAAqB9G,EAAUQ,EAAKsG,aAAa,oBAAsBa,GAI9GnH,EAAKqH,SAGLR,EAASlF,OAAO2F,YAAY3F,OAAOkE,QAAQgB,GAAQU,QAAO,EAAEC,EAAK7H,KAAqB,OAAVA,KAIzD,UAAhBkH,EAAOK,KACNzI,EAAEU,KAAK,IAAI0H,EAAOK,QAAQvF,OAAOkE,QAAQgB,GAAQC,KAAI,EAAEU,EAAK7H,KAAW,GAAG6H,MAAQ7H,OAAUqH,KAAK,eAAgBhH,EAAKL,UACtHyH,EAAUpD,SACVoD,EAAUjD,aACViD,EAAUnC,iBAEVxG,EAAEU,KAAK,IAAI0H,EAAOK,QAAQvF,OAAOkE,QAAQgB,GAAQC,KAAI,EAAEU,EAAK7H,KAAW,GAAG6H,MAAQ7H,OAAUqH,KAAK,QAAShH,EAAK4E,cAAeiC,EAAOK,QACjIE,EAAUpD,SACVoD,EAAUjD,aACViD,EAAUnC,gBAClB,EA6MAwC,YAvIJ,MACI,WAAAtH,CAAY0C,EAAK6E,GACbtH,KAAKuH,MAAQ,GACbvH,KAAKK,IAAMmH,OAAOC,SAASC,SAAW,KAAOF,OAAOC,SAASE,KAC7D3H,KAAK4H,OAASnF,EAAImF,OAClB5H,KAAK6H,OAASpF,EAAIoF,OAClB7H,KAAK8H,aAAe,IAAIhI,EACxBE,KAAKsH,WAAaA,CACtB,CAEA,UAAAS,CAAW1H,EAAKgB,GACZ,MAAM+E,EAAQpG,KAAKuH,MAAMS,WAAUnG,GAAQA,EAAKxB,MAAQA,IAEpD+F,GAAS,EACTpG,KAAKuH,MAAMnB,GAAO/E,KAAOA,EAEzBrB,KAAKuH,MAAM/G,KAAK,CAAEH,MAAKgB,QAE/B,CAGA,OAAA4G,CAAQ5H,GAAO,OAAOL,KAAKuH,MAAM/E,MAAKX,GAAQA,EAAKxB,MAAQA,GAAM,CAGjE,MAAA6H,CAAO7H,GAAO,OAAOL,KAAKuH,MAAMY,MAAKtG,GAAQA,EAAKxB,MAAQA,GAAqB,OAAdwB,EAAKR,WAA+BiC,IAAdzB,EAAKR,MAAoC,KAAdQ,EAAKR,MAAc,CAGrI,UAAA+G,CAAW/H,GAAOL,KAAKuH,MAAQvH,KAAKuH,MAAMJ,QAAOtF,GAAQA,EAAKxB,MAAQA,GAAM,CAG5E,KAAAgI,GAAUrI,KAAKuH,MAAQ,EAAI,CAC3B,WAAAe,GAAgB,OAAOtI,KAAKuH,KAAO,CAEnCgB,aAAe,CAACvB,EAAWwB,KAEvBxB,EAAUrH,SAAQiE,IACdA,EAAS4E,EAAa,GACxB,EAMN,WAAAC,CAAYpH,GAIZ,CAGA,YAAAqH,CAAarI,GACTL,KAAK8H,aAAa1H,QAAQC,EAAKL,KAAK2I,gBAAgBC,KAAK5I,MAC7D,CAEA,eAAA2I,CAAgBtH,GASZ5C,SAASC,cAAcsB,KAAK6H,QAAQrD,UAAU,GAE9C,IAEIqE,GAFS,IAAIC,WACAC,gBAAgB1H,EAAM,aACf3C,cAAcsB,KAAK4H,QAc3C,OAZIiB,EACApK,SAASC,cAAcsB,KAAK6H,QAAQrB,YAAYqC,EAAcG,WAAU,IAExErI,QAAQD,MAAM,4BAGlBV,KAAKuI,aAAavI,KAAKsH,aAMhB,CACX,GAsDAxI,KAVS,KAAO,CAAC,MAAM,KAAK,KAAK,KAAK,MAAMyE,QAAQ,UAAU0F,IAAMA,EAAIC,OAAOC,gBAAgB,IAAIC,WAAW,IAAI,GAAK,IAAMH,EAAI,GAAGI,SAAS,MAW7I7K,eA/CJ,MACI,WAAAuB,CAAYuJ,GACRtJ,KAAKsJ,eAAiBA,EACtBtJ,KAAKuJ,QAAUvJ,KAAKX,WACxB,CAEA,SAAAA,GACI,MAAM,eAAEiK,GAAmBtJ,KAE3B,IAAKsJ,IAAmBA,EAAe/C,QAAQiD,IAAK,OAAO,KAE3D,MAAQA,IAAKC,GAAgBH,EAAe/C,QACtCmD,EAAeC,MAAMC,KAAKN,EAAe5J,iBAAiB,SAEhE,IAAKgK,EAAa9I,OAAQ,OAAO,KAEjC,MAAMiJ,EAAaH,EAAaI,QAAO,CAACC,EAAKC,KACzC,MAAQC,WAAY7G,EAAY,MAAE7D,GAAUyK,EAAYzD,QAExD,OADAwD,EAAI3G,GAAgB7D,EACbwK,CAAG,GACX,CAAC,GAEJ,OAAO,IAAIG,IAAI,CAAC,CAACT,EAAaI,IAClC,CAEA,MAAAlL,CAAOyE,EAAc+G,GACjB,IAAKnK,KAAKuJ,QAAS,OAAOY,EAE1B,MAAMC,EAAgBpK,KAAKuJ,QAAQc,IAAIrK,KAAKsJ,eAAe/C,QAAQiD,KACnE,OAAKY,QAEkC9G,IAAhC8G,EAAchH,GAA8BgH,EAAchH,GAFtC+G,CAG/B,MCrnBAG,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBlH,IAAjBmH,EACH,OAAOA,EAAa7I,QAGrB,IAAID,EAAS2I,EAAyBE,GAAY,CAGjD5I,QAAS,CAAC,GAOX,OAHA8I,EAAoBF,GAAU7I,EAAQA,EAAOC,QAAS2I,GAG/C5I,EAAOC,OACf,CCrBA2I,EAAoBI,EAAKhJ,IACxB,IAAIiJ,EAASjJ,GAAUA,EAAOkJ,WAC7B,IAAOlJ,EAAiB,QACxB,IAAM,EAEP,OADA4I,EAAoBO,EAAEF,EAAQ,CAAEG,EAAGH,IAC5BA,CAAM,ECLdL,EAAoBO,EAAI,CAAClJ,EAASoJ,KACjC,IAAI,IAAI5D,KAAO4D,EACXT,EAAoBU,EAAED,EAAY5D,KAASmD,EAAoBU,EAAErJ,EAASwF,IAC5E7F,OAAO2J,eAAetJ,EAASwF,EAAK,CAAE+D,YAAY,EAAMd,IAAKW,EAAW5D,IAE1E,ECNDmD,EAAoBU,EAAI,CAACxI,EAAK2I,IAAU7J,OAAO8J,UAAUC,eAAeC,KAAK9I,EAAK2I,GCClFb,EAAoBiB,EAAK5J,IACH,oBAAX6J,QAA0BA,OAAOC,aAC1CnK,OAAO2J,eAAetJ,EAAS6J,OAAOC,YAAa,CAAEnM,MAAO,WAE7DgC,OAAO2J,eAAetJ,EAAS,aAAc,CAAErC,OAAO,GAAO,iJCC9D,MAAMoM,EAAQ,CACVC,QAAS,GAKb,IAAItE,EAAa,CAAC,KACd7I,SAASiB,iBAAiB,KAAKC,SAAQkM,IACnCA,EAAKhI,iBAAiB,SAAUkH,IAC5BA,EAAEe,iBACFC,EAAYrD,aAAamD,EAAKG,KAAK,GACrC,GACJ,GAGN1E,EAAa,IAAIA,GAAY,aAAW,CAAGtJ,IAAK2N,EAAO1N,OAAQ,eAAgBW,iBAC/E0I,EAAa,IAAIA,GAAY,aAAY,CAAEtJ,IAAK2N,EAAO1N,OAAQ,cAAeW,iBAI9E,MAAMmN,EAAc,IAAI,EAAA1E,YAAY,CAACO,OAAQ,cAAeC,OAAQ,OAAQP,GAC5EyE,EAAYrD,aAAa","sources":["webpack://swift-swap/./Modules/ClassModule.js","webpack://swift-swap/./Modules/HtmlModule.js","webpack://swift-swap/./src/PageFlow.js","webpack://swift-swap/webpack/bootstrap","webpack://swift-swap/webpack/runtime/compat get default export","webpack://swift-swap/webpack/runtime/define property getters","webpack://swift-swap/webpack/runtime/hasOwnProperty shorthand","webpack://swift-swap/webpack/runtime/make namespace object","webpack://swift-swap/./App.js"],"sourcesContent":["import { PageFlow, uuid, DatasetHandler } from '../src/PageFlow.js';\n\n\n// This is a Standard Module\nconst ClassModule = ({ val, parent }) => {\n    // Add More items to State\n    const localState = { \n        ...val,\n        isValue : 1,\n        switchName : 'abc',\n    };\n    \n    // Dependancies\n    const [_, variables] = new PageFlow(parent, { ...localState}); // Initialise Component (parent element, variables, )\n    // Initialise the Dataset Example:  <dataset data-set=\"object\"><data data-collection=\"varname\"  data-value=\"vardata\" /></dataset>\n    const dataset = new DatasetHandler(document.querySelector('dataset'));\n    let myVariable = dataset.getVar('variable-name2123', 'new Valuuuu'); // get variable from dataset, if not create new value;\n\n\n    // Typical Functions\n    const functions = {\n\n    }\n\n    const RenderComponent = () => {\n        const id = uuid();\n\n        let button = _.node(`<button @ref=\"${id}_06\" @update=\"${id}_07\" @trigger=\"click\">{{ switchName }}</button>`, \n            (_this) => { variables.switchName = variables.isValue = variables.isValue + 1;   }, // What happens to this element\n            (_this) => { return variables.switchName }, // What Happens when Re-Rendering\n            (_this) => { variables.isValue = 1; return 1 } // Set Defaults when Rendering\n        );\n\n        _.node(`<span @ref=\"${id}_07\">{{ switchName }}</span>`, null, null, (_this) => { return 1 } );\n\n        _.render();\n    };\n\n    return {\n        RenderComponent: RenderComponent // Return the Render Component\n    };\n};\n\n\n\nexport { ClassModule as default }","import { PageFlow, HTMLflow, uuid, DatasetHandler } from '../src/PageFlow.js';\n\n\n// HTML Rendered Moduke\nconst HtmlModule = ({ val, parent }) => {\n    // Add More items to State\n    const localState = { \n       ...val,\n       switchName : 'Clear Input',\n       switchValue : ''\n   };\n\n   // Include PageFlow Dependancies\n   const [_, variables] = new PageFlow(parent, { ...localState}); // Initialise Component\n   // Initialise the Dataset Example:  <dataset data-set=\"object\"><data data-collection=\"varname\"  data-value=\"vardata\" /></dataset>\n   const dataset = new DatasetHandler(document.querySelector('dataset')).parseData();\n\n   // Typical Functions\n   const functions = {\n       testCallback: (_this) => { // use callback=\"clearCallback\" on HTML Element\n           return (_this.value) ? _this.value : ' ';\n       },\n       clearCallback: (_this) => { // use postcallback=\"clearCallback\" on HTML Element\n           return ' ';\n       },\n       defaultCallback: (_this) => { // use defaultcallback=\"defaultCallback\" on HTML Element\n          return '12';\n       }\n   }\n\n   // Render Component (Loops the HTML values)\n   const RenderComponent = () => {\n       const id = uuid(); // Generate UUID for block Module. Each time RenderComponent is called the ID gets reset.\n       \n       document.querySelectorAll(parent + ' [html]').forEach((item) => {\n           HTMLflow(_, {item}, functions, id); // HTMLflow renders components\n       });\n\n       _.render(); // Final Render Component (Forces render to produce up to date Application State )\n   };\n\n   return {\n       RenderComponent: RenderComponent // Return the Render Component\n   };\n};\n\nexport { HtmlModule as default }","// import './PageFlow.scss';\n\n// Linear DOM\nclass PageFlow {\n    constructor(page, { ...variables }) {\n        this._pageFlow = []; // Pages\n        this._elemFlow = []; // Elements\n        this._elemFlowRef = []; // Elements Reference\n        this._app = page; // asign _app\n        this._variables = variables;\n\n        // if(retainValue === false) {\n        //     this._variables = Object.assign({}, variables);;\n        // }\n\n        // if(retainValue === true) {\n        //     this._variables = variables;\n        // }\n\n        return [this, variables]; // Return this, and additional properties\n    }\n\n    // Function to find Ref in Array, technically a cache finder\n    // that finds an existing element\n    _findRef(input) {\n        // Convert input to string to handle both number and string inputs\n        const searchString = String(input);\n        // Use the find method to search for the object with matching ref property\n        let ref = this._elemFlow.find(obj => String(obj.ref) === searchString);\n        \n        return ref?.selector ?? null;\n    }\n\n    _findObjectByRef = (refValue) => {\n        // Use the find method to search for the object with matching ref property\n        return this._elemFlow.find(obj => obj['@ref'] === refValue);\n    };\n\n    _findRefObjectByRef = (refValue) => {\n        // Use the find method to search for the object with matching ref property\n        return this._elemFlowRef.find(obj => obj['@ref'] === refValue);\n    };\n\n\n    _getValue(str)  {\n        const pattern = /{{\\s*(.*?)\\s*}}/;\n        let result = str;\n\n        const match = str.match(pattern);\n        let variableValue;\n\n        if (match) {\n            const variableName = match[1].trim();\n            variableValue = this._variables[variableName];\n\n    \n            if (variableValue !== undefined) {\n                result = str.replace(pattern, variableValue);\n            } else {\n                result = null; // Variable not found\n            }\n        }\n\n        return { result: result, value: variableValue };\n      };\n      \n\n    // Handle the @update attribute\n    _eventListener = (string) => {\n        // Get Ref\n        const ref = /@ref=\"([^\"]*)\"/;\n        const refmatch = string.match(ref);\n        const refValue = refmatch ? refmatch[1] : null;\n\n        // Get Value\n        const regex = /@trigger=\"([^\"]*)\"/;\n        const match = string.match(regex);\n        const value = match ? match[1] : null;\n\n        // Get Ref\n        const renderRef = /@render=\"([^\"]*)\"/;\n        const renderRefmatch = string.match(renderRef);\n        const renderRefValue = renderRefmatch ? renderRefmatch[1] : null;\n\n        // on RUN event\n        if(value === 'run') {\n            callback(this._findObjectByRef(refValue)?.selector); // Render event by @ref\n        } \n\n        // on CLICK event\n        if(value === 'click') {\n            this._findObjectByRef(refValue)?.selector.addEventListener('click', () => { this._renderEventListener(refValue);  }) // Render event by @ref + @trigger\n        }\n\n        // on INPUT field (key up) Event\n        if(value === 'input') {\n            this._findObjectByRef(refValue)?.selector.addEventListener('keyup', () => { this._renderEventListener(refValue);  }) // Render event by @ref + @trigger\n        }\n    };\n\n\n    _renderEventListener = (refValue) => {\n        let callback = this._findRefObjectByRef(refValue)?.callback;\n        let postcallback = this._findRefObjectByRef(refValue)?.postcallback;\n        let defaultcallback = this._findRefObjectByRef(refValue)?.defaultcallback;\n        let string = this._findRefObjectByRef(refValue).string;\n        // Chain for Re Rendering Elements\n        let modifyStartValue = null;\n        let modifyEndValue = null;\n\n        if(callback) {\n            let result = callback(this._findObjectByRef(refValue)?.selector);\n            if(!result) {\n                \n            } else {\n                modifyStartValue = result; \n            }\n        }\n\n\n        this._htmlChange(string, modifyStartValue);\n        \n        \n       \n        if(postcallback) {\n            let result = postcallback(this._findObjectByRef(refValue)?.selector);\n            if(!result) {\n                return false;\n            } else {\n                modifyEndValue = result;\n            }\n        }\n\n        this._updateAttribute(string, modifyEndValue);\n\n        \n\n\n    \n    }\n\n\n    // Process HTML change\n    _htmlChange = (string, getValue) => { \n        const regex = /@ref=\"([^\"]*)\"/;\n        const match = string.match(regex);\n        const refValue = match ? match[1] : null;\n\n        // if no getValue then attempt to get the string\n        if(!getValue) {\n            getValue =  this._getFullString(string).value;\n        }\n\n        // Return if get value is undefinde, as it'll print undefined\n        if(getValue === undefined) {\n            return;\n        }\n        \n        if(this._getFullString(string).value !== this._findRefObjectByRef(refValue)?.value) {\n\n            if(this._findRefObjectByRef(refValue)?.value) {\n                // this._findRefObjectByRef(refValue).value = fullString.value;\n\n                if ( this._findObjectByRef(refValue)?.selector?.tagName.toLowerCase() === 'input') {\n                    this._findRefObjectByRef(refValue).value =  getValue\n                    this._findObjectByRef(refValue).selector.value = getValue\n                } else {\n                    this._findRefObjectByRef(refValue).value = getValue\n                    this._findObjectByRef(refValue).selector.innerHTML = getValue\n                }\n            }\n        };\n    };\n\n\n    _getFullString = (string) => {\n        if(this._getValue(string)) {\n            return this._getValue(string);\n        }\n\n        return null;\n    };\n\n\n    // Update Attribute @update=\"1,2\"\n    _updateAttribute = (string, newValue = null) => {\n        const regex = /@update=\"([^\"]*)\"/;\n        const match = string.match(regex);\n        const refValue = match ? match[1] : null;\n\n        if(refValue == null) { return }\n        let updateItems = refValue.split(',');\n\n        updateItems.forEach(ref => {\n            this._htmlChangeByRef(ref, newValue);\n        });\n    };\n\n\n\n\n    _htmlChangeByRef = (refValue, newValue) => { \n        if(!newValue) {\n            newValue = this._getFullString().value;\n        }\n\n        if(!this._findObjectByRef(refValue)) {\n            return;\n        }\n        \n        if(this._findRefObjectByRef(refValue)?.value !== null) {\n            \n            if (this._findObjectByRef(refValue)?.selector?.tagName.toLowerCase() === 'input') {\n                // Input\n                this._findRefObjectByRef(refValue).value =  newValue;\n                this._findObjectByRef(refValue).selector.value =  newValue;\n            } else {\n                // HTML\n                this._findRefObjectByRef(refValue).value = newValue;\n                this._findObjectByRef(refValue).selector.innerHTML = newValue;\n            }\n        } else {\n            console.log('refValue does not exist');\n        }\n    }\n\n    node(string, callback = null, postcallback = null, defaultcallback = null) {\n        // Convert Inner HTML\n        // Convert {{ }} in to <div></div>\n        let fullString = this._getFullString(string);\n\n        // Load HTML changes\n        this._htmlChange(string);\n\n        // If strings already exist and haven't been changed, do not run function\n        // IF string matches anything inside of  this._elemFlowRef string\n        const noChange = (() => { \n            const matchedObject = this._elemFlowRef.find(obj => obj.string === string);\n\n            if(matchedObject) {\n                return this._findObjectByRef(matchedObject['@ref'])?.selector;\n            }\n        })();\n\n        // Extract String Data\n       const extractAttributes = (() => {\n            const pattern = /(?:class|data-\\w+|@ref|@trigger|@update)=\"([^\"]*)\"/g;\n            const matches = string.match(pattern) || [];\n            const attributes = {};\n\n            matches.forEach(match => {\n                const [attributeName, attributeValue] = match.split('=');\n                attributes[attributeName] = attributeValue.replace(/\"/g, ''); // Remove surrounding quotes\n            });\n\n            return attributes;\n        })();\n\n\n        // Extract String Data\n        const extractHTML = (() => {\n            const contentPattern = /<div[^>]*>([^<]*)<\\/div>/;\n            const contentMatch = contentPattern.exec(string);\n            const content = contentMatch ? contentMatch[1].trim() : null;\n\n            return content;\n        })();\n\n\n        // Replace Objects with updated values;\n        const foundObject = this._findObjectByRef(extractAttributes['@ref']);\n        if (foundObject) {\n            const { selector } = foundObject;\n            const attributesToSet = {};\n        \n            for (const [attributeName, attributeValue] of Object.entries(extractAttributes)) {\n                if (attributeName.startsWith('@')) {\n                    // Set attribute using setAttributeNodeNS for names starting with '@'\n                    attributesToSet[attributeName.slice(1)] = attributeValue;\n                } else {\n                    // For other attribute names, use setAttribute directly\n                    attributesToSet[attributeName] = attributeValue;\n                }\n            }\n        \n            // Set all attributes at once\n            Object.entries(attributesToSet).forEach(([name, value]) => {\n                if(name === 'ref' || name === 'trigger' || name === 'update') { return } // Avoid changing @ref or @trigger values (These are static)\n                selector.setAttribute(name, value);\n            });\n\n            return selector; \n        }\n\n        // Buld HTML out of string\n        const template = document.createElement('template');\n        template.innerHTML = fullString.result.trim();\n        const selector = template.content.firstChild;\n\n    \n   \n        if(callback) {\n            selector.getAttribute('@trigger')\n            selector.addEventListener(selector.getAttribute('@action'), () => {\n                callback?.(null);\n            })\n        }\n      \n        // Add References\n        this._elemFlow.push({ '@ref': selector.getAttribute('@ref'), selector: selector, update: null }); // update enqueues update\n\n        this._elemFlowRef.push({ \n            '@ref': selector.getAttribute('@ref'), \n            '@trigger' : selector.getAttribute('@trigger'), \n            '@update': selector.getAttribute('@update') ?? null, \n            '@render': selector.getAttribute('@render') ?? null, \n            '@initial': selector.getAttribute('@initial') ?? null, \n            '@parent': selector.getAttribute('@parent') ?? null, \n            index: this._elemFlow.length - 1,\n            class: selector.classList, \n            id: selector.getAttribute('id'),\n            data: selector.dataset, \n            string: string ?? '',\n            value : fullString.value ?? '',\n            update:  selector.getAttribute('@load') ?? null,\n            callback: callback ?? null,\n            postcallback: postcallback ?? null,\n            defaultcallback: defaultcallback ?? null\n        }); // add Reference Value xand Index\n\n   \n        // Target Location (RENDER INITIAL ELEMENT);\n        let parent = document.querySelector(this._app);\n\n        if(this._findObjectByRef(selector.getAttribute('@parent'))?.selector) {\n            parent = this._findObjectByRef(selector.getAttribute('@parent'))?.selector\n        } else if(selector.getAttribute('@parent')) {\n            parent = document.querySelector(selector.getAttribute('@parent'))\n        } \n\n        parent.appendChild(selector);\n        this._eventListener(string);\n\n\n        return selector ?? null;\n    }\n\n    render = () => {\n        this._elemFlowRef.forEach(item => {\n            if(item['@update'] && item['@load'] !== false) {\n                if(item['@trigger'] !== 'click') {\n                 this._renderEventListener(item['@ref']); // Trigger Referenced Items\n                }\n            }\n\n            if(item['@trigger'] === 'click') {\n                // this._renderEventListener(item['@ref']);\n            }\n\n            if(item['@render']) {\n                this._renderEventListener(item['@render']);\n            }\n\n            // Render Initial Value\n            if(item['defaultcallback']) {\n                console.log('run');\n                // this._htmlChangeByRef(item['@ref'], item['@initial']);\n\n                 // Update variables to be the value specified in '@initial'\n               \n                 // Update variables to be the value specified in '@initial'\n                //  \n                 // Update the HTML using initial variables\n\n                let value = item['defaultcallback']();\n\n                if(value) {\n             \n\n                    console.log(item['@ref']);\n                    console.log('has VaLu');\n                    console.log(value);\n                    // Issue running this function\n                    this._htmlChangeByRef(item['@ref'], value);\n                }\n            }\n        });\n\n\n    }\n}\n\n\nconst HTMLflow = (_, obj, functions, id) => {\n    let item = obj.item;\n\n   \n\n    // Define Values\n    let object = {\n        '@trigger': item.getAttribute('@trigger') ?? null,\n        '@update':  item.getAttribute('@update').split(',').map(num => id + num).join(',') ?? null,\n        '@ref':  item.getAttribute('@ref').split(',').map(num => id + num).join(',') ?? null,\n        '@parent': item.getAttribute('@parent') ?? null,\n        class: item.getAttribute('class') ?? null,\n        id:  item.getAttribute('id') ?? null,\n        style:  item.getAttribute('style') ?? null,\n        type : item.tagName.toLowerCase(),\n        value: item.value ?? null,\n    }\n\n    const noCallback = () => {} // Cover the scenario that nocallback exists\n\n    // Define callbacks\n    let callbacks = {\n        callback: item.getAttribute('callback') ? functions[item.getAttribute('callback')] : noCallback,\n        postcallback: item.getAttribute('postcallback') ? functions[item.getAttribute('postcallback')] : noCallback,\n        defaultcallback: item.getAttribute('defaultcallback') ? functions[item.getAttribute('defaultcallback')] : noCallback\n    }\n\n    // Remove all Items\n    item.remove();\n\n    // Filter out properties with null values\n    object = Object.fromEntries(Object.entries(object).filter(([key, value]) => value !== null));\n\n  \n    // Create new Node\n    if(object.type === 'input') {\n        _.node(`<${object.type} ${Object.entries(object).map(([key, value]) => `${key}=\"${value}\"`).join(' ')} value=\"${ item.value }\">`,\n        callbacks.callback,\n        callbacks.postcallback, \n        callbacks.defaultcallback); // Need to write callbacks.defaults here\n    } else {\n        _.node(`<${object.type} ${Object.entries(object).map(([key, value]) => `${key}=\"${value}\"`).join(' ')}>${ item.innerHTML }</${object.type}>`,\n            callbacks.callback,\n            callbacks.postcallback,\n            callbacks.defaultcallback);  // Need to write callbacks.defaults here\n    }\n}\n\n\n\n// const requestQueue = new RequestQueue();\n// requestQueue.enqueue(url1, this._renderPage.bind(this));\n// requestQueue.enqueue(url2, this._renderPage.bind(this));\n// requestQueue.cancelAll();\n\nclass RequestQueue {\n    constructor() {\n        this.queue = [];\n        this.abortController = new AbortController();\n    }\n\n    async enqueue(url, renderFunction) {\n        const request = { url: url, renderFunction };\n\n        this.queue.push(request);\n\n        try {\n            await this.processQueue();\n        } catch (error) {\n            console.error('Error processing request queue:', error);\n        }\n    }\n\n    async processQueue() {\n        while (this.queue.length > 0) {\n            const { url, renderFunction } = this.queue.shift();\n            const { signal } = this.abortController;\n\n            try {\n                const response = await fetch(url, { signal });\n\n                if (!response.ok) {\n                    throw new Error(`Failed to fetch data from ${url}. Status: ${response.status} ${response.statusText}`);\n                }\n\n                // const contentType = response.headers.get('content-type');\n                // if (!contentType || !contentType.includes('application/json')) {\n                //     throw new Error(`Invalid content type received from ${url}. Expected JSON.`);\n                // }\n\n                const data = await response.text();\n\n                if (!data || Object.keys(data).length === 0) {\n                    throw new Error(`No valid data received from ${url}`);\n                }\n\n                renderFunction(data);\n            } catch (error) {\n                console.error(`Error while fetching or rendering data from ${url}:`, error);\n            }\n        }\n    }\n\n    cancelAll() {\n        this.abortController.abort();\n        this.abortController = new AbortController();\n        this.queue = [];\n    }\n}\n\n\n\n// const dynamicPage = new DynamicPage({ source: '.selector', target: '.selector' }, renderList));\n// cons dynamicPage._makeRequest(url);\n\nclass DynamicPage {\n    constructor(obj, renderList) {\n        this.cache = [];\n        this.url = window.location.protocol + \"//\" + window.location.host;\n        this.source = obj.source;\n        this.target = obj.target;\n        this.requestQueue = new RequestQueue();\n        this.renderList = renderList;\n    }\n    // Adds or updates a page in the cache\n    upsertPage(url, data) {\n        const index = this.cache.findIndex(page => page.url === url);\n\n        if (index > -1) {\n            this.cache[index].data = data;\n        } else {\n            this.cache.push({ url, data });\n        }\n    }\n\n    // Retrieves a page from the cache\n    getPage(url) { return this.cache.find(page => page.url === url); }\n\n    // Checks if a page exists in the cache\n    exists(url) { return this.cache.some(page => page.url === url && page.data !== null && page.data !== undefined && page.data !== ''); }\n    \n    // Removes a page from the cache\n    removePage(url) { this.cache = this.cache.filter(page => page.url !== url); }\n\n    // Clears the entire cache\n    clear() { this.cache = []; }\n    getAllPages() { return this.cache; }\n\n    runCallbacks = (callbacks, callbackArgs) => {\n    \n        callbacks.forEach(callback => {\n            callback(callbackArgs);\n        });\n    }\n    \n   \n\n    // Render the new Page Data\n    _renderPage(data) {\n       \n    \n       \n    }\n\n    // Request Page from URL (HTTP REQUEST)\n    _makeRequest(url) {\n        this.requestQueue.enqueue(url, this._processRequest.bind(this) );\n    }\n\n    _processRequest(data) {\n\n        // if (this.target) {\n        //     const childElements =  document.querySelector(this.target).querySelectorAll('*');\n        //     childElements.forEach(child => {\n        //         child.parentNode.removeChild(child);\n        //     });\n        // }\n\n        document.querySelector(this.target).innerHTML='';\n        \n        let parser = new DOMParser();\n        let doc = parser.parseFromString(data, \"text/html\");\n        let sourceElement = doc.querySelector(this.source);\n        \n        if (sourceElement) {\n            document.querySelector(this.target).appendChild(sourceElement.cloneNode(true));\n        } else {\n            console.error(\"Source element not found\");\n        }\n   \n        this.runCallbacks(this.renderList);\n        \n       \n    \n      \n\n        return true;\n    }\n\n}\n\n// This is how to use DatasetHandler\n// const datasetHandler = new DatasetHandler(document.querySelector('dataset'));\n// const dataset = datasetHandler.parseData();\n\nclass DatasetHandler {\n    constructor(datasetElement) {\n        this.datasetElement = datasetElement;\n        this.dataMap = this.parseData();\n    }\n\n    parseData() {\n        const { datasetElement } = this;\n        \n        if (!datasetElement || !datasetElement.dataset.set) return null;\n\n        const { set: datasetName } = datasetElement.dataset;\n        const dataElements = Array.from(datasetElement.querySelectorAll('data'));\n\n        if (!dataElements.length) return null;\n\n        const dataObject = dataElements.reduce((acc, dataElement) => {\n            const { collection: variableName, value } = dataElement.dataset;\n            acc[variableName] = value;\n            return acc;\n        }, {});\n\n        return new Map([[datasetName, dataObject]]);\n    }\n\n    getVar(variableName, defaultValue) {\n        if (!this.dataMap) return defaultValue;\n\n        const datasetObject = this.dataMap.get(this.datasetElement.dataset.set);\n        if (!datasetObject) return defaultValue;\n\n        return datasetObject[variableName] !== undefined ? datasetObject[variableName] : defaultValue;\n    }\n}\n\n\nconst uuid = () => ([1e3]+-1e2+-4e2+-8e2+-1e12).replace(/[018]/g, c => (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16));\n\n\n// export { PageFlow, HTMLflow, DynamicPage, uuid };\n\n\nmodule.exports = {\n    PageFlow,\n    HTMLflow,\n    DynamicPage,\n    uuid,\n    DatasetHandler\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import './app.scss';\nimport { DynamicPage } from './src/PageFlow.js';\nimport HtmlModule from './Modules/HtmlModule.js'; // Import HTML rendering example\nimport ClassModule from './Modules/ClassModule.js'; // Import Class/JS rendering example\n\n// Global State\nconst state = {\n    counter: 1,\n}\n\n// Components to Render on each page load. Add RenderComponent functions to the Module Classes here.\n// Each time the page is loaded these functions are called\nlet renderList = [() => {\n    document.querySelectorAll('a').forEach(link => {\n        link.addEventListener('click', (a) => {\n            a.preventDefault();\n            dynamicPage._makeRequest(link.href); // Make Request and Render\n        });\n    });\n}];\n\nrenderList = [...renderList, HtmlModule({  val: state, parent: '.myParent2' }).RenderComponent]; // Works\nrenderList = [...renderList, ClassModule({ val: state, parent: '.myParent' }).RenderComponent];\n\n// Define DynamicPage // Source = The HTML element to grab (OuterHTML) // target = The Placement\n// DynamicPage needs to load after any specified data - should technically be the last Function loaded\nconst dynamicPage = new DynamicPage({source: 'DynamicPage', target: 'App'}, renderList);\ndynamicPage._makeRequest('index.html'); // Make Request and Render index.html to the page\n\n\n\n"],"names":["ClassModule","val","parent","localState","isValue","switchName","_","variables","PageFlow","DatasetHandler","document","querySelector","getVar","RenderComponent","id","uuid","node","_this","render","HtmlModule","switchValue","functions","parseData","testCallback","value","clearCallback","defaultCallback","querySelectorAll","forEach","item","HTMLflow","RequestQueue","constructor","this","queue","abortController","AbortController","enqueue","url","renderFunction","request","push","processQueue","error","console","length","shift","signal","response","fetch","ok","Error","status","statusText","data","text","Object","keys","cancelAll","abort","module","exports","page","_pageFlow","_elemFlow","_elemFlowRef","_app","_variables","_findRef","input","searchString","String","ref","find","obj","selector","_findObjectByRef","refValue","_findRefObjectByRef","_getValue","str","pattern","result","match","variableValue","variableName","trim","undefined","replace","_eventListener","string","refmatch","renderRefmatch","callback","addEventListener","_renderEventListener","postcallback","modifyStartValue","modifyEndValue","_htmlChange","_updateAttribute","getValue","_getFullString","tagName","toLowerCase","innerHTML","newValue","split","_htmlChangeByRef","log","defaultcallback","fullString","matchedObject","extractAttributes","matches","attributes","attributeName","attributeValue","foundObject","contentMatch","exec","attributesToSet","entries","startsWith","slice","name","setAttribute","template","createElement","content","firstChild","getAttribute","update","index","class","classList","dataset","appendChild","object","map","num","join","style","type","noCallback","callbacks","remove","fromEntries","filter","key","DynamicPage","renderList","cache","window","location","protocol","host","source","target","requestQueue","upsertPage","findIndex","getPage","exists","some","removePage","clear","getAllPages","runCallbacks","callbackArgs","_renderPage","_makeRequest","_processRequest","bind","sourceElement","DOMParser","parseFromString","cloneNode","c","crypto","getRandomValues","Uint8Array","toString","datasetElement","dataMap","set","datasetName","dataElements","Array","from","dataObject","reduce","acc","dataElement","collection","Map","defaultValue","datasetObject","get","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","state","counter","link","preventDefault","dynamicPage","href"],"sourceRoot":""}