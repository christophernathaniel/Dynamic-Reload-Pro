{"version":3,"file":"PageFlow.js","mappings":";qCAgcA,MAAMA,EACF,WAAAC,GACIC,KAAKC,MAAQ,GACbD,KAAKE,gBAAkB,IAAIC,eAC/B,CAEA,aAAMC,CAAQC,EAAKC,GACf,MAAMC,EAAU,CAAEF,IAAKA,EAAKC,kBAE5BN,KAAKC,MAAMO,KAAKD,GAEhB,UACUP,KAAKS,cACf,CAAE,MAAOC,GACLC,QAAQD,MAAM,kCAAmCA,EACrD,CACJ,CAEA,kBAAMD,GACF,KAAOT,KAAKC,MAAMW,OAAS,GAAG,CAC1B,MAAM,IAAEP,EAAG,eAAEC,GAAmBN,KAAKC,MAAMY,SACrC,OAAEC,GAAWd,KAAKE,gBAExB,IACI,MAAMa,QAAiBC,MAAMX,EAAK,CAAES,WAEpC,IAAKC,EAASE,GACV,MAAM,IAAIC,MAAM,6BAA6Bb,cAAgBU,EAASI,UAAUJ,EAASK,cAQ7F,MAAMC,QAAaN,EAASO,OAE5B,IAAKD,GAAqC,IAA7BE,OAAOC,KAAKH,GAAMT,OAC3B,MAAM,IAAIM,MAAM,+BAA+Bb,KAGnDC,EAAee,EACnB,CAAE,MAAOX,GACLC,QAAQD,MAAM,+CAA+CL,KAAQK,EACzE,CACJ,CACJ,CAEA,SAAAe,GACIzB,KAAKE,gBAAgBwB,QACrB1B,KAAKE,gBAAkB,IAAIC,gBAC3BH,KAAKC,MAAQ,EACjB,EA4IJ0B,EAAOC,QAAU,CACbC,SA9nBJ,MACI,WAAA9B,CAAY+B,MAAWC,IAenB,OAdA/B,KAAKgC,UAAY,GACjBhC,KAAKiC,UAAY,GACjBjC,KAAKkC,aAAe,GACpBlC,KAAKmC,KAAOL,EACZ9B,KAAKoC,WAAaL,EAUX,CAAC/B,KAAM+B,EAClB,CAIA,QAAAM,CAASC,GAEL,MAAMC,EAAeC,OAAOF,GAE5B,IAAIG,EAAMzC,KAAKiC,UAAUS,MAAKC,GAAOH,OAAOG,EAAIF,OAASF,IAEzD,OAAOE,GAAKG,UAAY,IAC5B,CAEAC,iBAAoBC,GAET9C,KAAKiC,UAAUS,MAAKC,GAAOA,EAAI,UAAYG,IAGtDC,oBAAuBD,GAEZ9C,KAAKkC,aAAaQ,MAAKC,GAAOA,EAAI,UAAYG,IAIzD,SAAAE,CAAUC,GACN,MAAMC,EAAU,kBAChB,IAAIC,EAASF,EAEb,MAAMG,EAAQH,EAAIG,MAAMF,GACxB,IAAIG,EAEJ,GAAID,EAAO,CACP,MAAME,EAAeF,EAAM,GAAGG,OAC9BF,EAAgBrD,KAAKoC,WAAWkB,GAI5BH,OADkBK,IAAlBH,EACSJ,EAAIQ,QAAQP,EAASG,GAErB,IAEjB,CAEA,MAAO,CAAEF,OAAQA,EAAQO,MAAOL,EAClC,CAIFM,eAAkBC,IAEd,MACMC,EAAWD,EAAOR,MADZ,kBAENN,EAAWe,EAAWA,EAAS,GAAK,KAIpCT,EAAQQ,EAAOR,MADP,sBAERM,EAAQN,EAAQA,EAAM,GAAK,KAI3BU,EAAiBF,EAAOR,MADZ,qBAEKU,GAAiBA,EAAe,GAG1C,QAAVJ,GACCK,SAAS/D,KAAK6C,iBAAiBC,IAAWF,UAIjC,UAAVc,GACC1D,KAAK6C,iBAAiBC,IAAWF,SAASoB,iBAAiB,SAAS,KAAQhE,KAAKiE,qBAAqBnB,EAAS,IAItG,UAAVY,GACC1D,KAAK6C,iBAAiBC,IAAWF,SAASoB,iBAAiB,SAAS,KAAQhE,KAAKiE,qBAAqBnB,EAAS,GACnH,EAIJmB,qBAAwBnB,IACpB,IAAIiB,EAAW/D,KAAK+C,oBAAoBD,IAAWiB,SAC/CG,EAAelE,KAAK+C,oBAAoBD,IAAWoB,aAEnDN,GADkB5D,KAAK+C,oBAAoBD,GAClC9C,KAAK+C,oBAAoBD,GAAUc,QAE5CO,EAAmB,KACnBC,EAAiB,KAErB,GAAGL,EAAU,CACT,IAAIZ,EAASY,EAAS/D,KAAK6C,iBAAiBC,IAAWF,UACnDO,IAGAgB,EAAmBhB,EAE3B,CAOA,GAJAnD,KAAKqE,YAAYT,EAAQO,GAItBD,EAAc,CACb,IAAIf,EAASe,EAAalE,KAAK6C,iBAAiBC,IAAWF,UAC3D,IAAIO,EACA,OAAO,EAEPiB,EAAiBjB,CAEzB,CAEAnD,KAAKsE,iBAAiBV,EAAQQ,EAAe,EAUjDC,YAAc,CAACT,EAAQW,KACnB,MACMnB,EAAQQ,EAAOR,MADP,kBAERN,EAAWM,EAAQA,EAAM,GAAK,KAGhCmB,IACAA,EAAYvE,KAAKwE,eAAeZ,GAAQF,YAI5BF,IAAbe,GAIAvE,KAAKwE,eAAeZ,GAAQF,QAAU1D,KAAK+C,oBAAoBD,IAAWY,OAEtE1D,KAAK+C,oBAAoBD,IAAWY,QAGuC,UAArE1D,KAAK6C,iBAAiBC,IAAWF,UAAU6B,QAAQC,eACpD1E,KAAK+C,oBAAoBD,GAAUY,MAASa,EAC5CvE,KAAK6C,iBAAiBC,GAAUF,SAASc,MAAQa,IAEjDvE,KAAK+C,oBAAoBD,GAAUY,MAAQa,EAC3CvE,KAAK6C,iBAAiBC,GAAUF,SAAS+B,UAAYJ,GAGhE,EAILC,eAAkBZ,GACX5D,KAAKgD,UAAUY,GACP5D,KAAKgD,UAAUY,GAGnB,KAKXU,iBAAmB,CAACV,EAAQgB,EAAW,QACnC,MACMxB,EAAQQ,EAAOR,MADP,qBAERN,EAAWM,EAAQA,EAAM,GAAK,KAEpC,GAAe,MAAZN,EAAoB,OACLA,EAAS+B,MAAM,KAErBC,SAAQrC,IAChBzC,KAAK+E,iBAAiBtC,EAAKmC,EAAS,GACtC,EAMNG,iBAAmB,CAACjC,EAAU8B,KACtBA,IACAA,EAAW5E,KAAKwE,iBAAiBd,OAGjC1D,KAAK6C,iBAAiBC,KAIuB,OAA9C9C,KAAK+C,oBAAoBD,IAAWY,MAEsC,UAArE1D,KAAK6C,iBAAiBC,IAAWF,UAAU6B,QAAQC,eAEnD1E,KAAK+C,oBAAoBD,GAAUY,MAASkB,EAC5C5E,KAAK6C,iBAAiBC,GAAUF,SAASc,MAASkB,IAGlD5E,KAAK+C,oBAAoBD,GAAUY,MAAQkB,EAC3C5E,KAAK6C,iBAAiBC,GAAUF,SAAS+B,UAAYC,GAGzDjE,QAAQqE,IAAI,2BAChB,EAGJ,IAAAC,CAAKrB,EAAQG,EAAW,KAAMG,EAAe,KAAMgB,EAAkB,MAGjE,IAAIC,EAAanF,KAAKwE,eAAeZ,GAGrC5D,KAAKqE,YAAYT,GAIA,MACb,MAAMwB,EAAgBpF,KAAKkC,aAAaQ,MAAKC,GAAOA,EAAIiB,SAAWA,IAEnE,GAAGwB,EACQpF,KAAK6C,iBAAiBuC,EAAc,QAElD,EANgB,GAAjB,MASKC,EAAoB,MACrB,MACMC,EAAU1B,EAAOR,MADP,wDACyB,GACnCmC,EAAa,CAAC,EAOpB,OALAD,EAAQR,SAAQ1B,IACZ,MAAOoC,EAAeC,GAAkBrC,EAAMyB,MAAM,KACpDU,EAAWC,GAAiBC,EAAehC,QAAQ,KAAM,GAAG,IAGzD8B,CACV,EAXwB,GAyBnBG,GAVc,MAChB,MACMC,EADiB,2BACaC,KAAKhC,GACzB+B,GAAeA,EAAa,GAAGpC,MAGlD,EANmB,GAUAvD,KAAK6C,iBAAiBwC,EAAkB,UAC5D,GAAIK,EAAa,CACb,MAAM,SAAE9C,GAAa8C,EACfG,EAAkB,CAAC,EAEzB,IAAK,MAAOL,EAAeC,KAAmBlE,OAAOuE,QAAQT,GACrDG,EAAcO,WAAW,KAEzBF,EAAgBL,EAAcQ,MAAM,IAAMP,EAG1CI,EAAgBL,GAAiBC,EAUzC,OALAlE,OAAOuE,QAAQD,GAAiBf,SAAQ,EAAEmB,EAAMvC,MAChC,QAATuC,GAA2B,YAATA,GAA+B,WAATA,GAC3CrD,EAASsD,aAAaD,EAAMvC,EAAM,IAG/Bd,CACX,CAGA,MAAMuD,EAAWC,SAASC,cAAc,YACxCF,EAASxB,UAAYQ,EAAWhC,OAAOI,OACvC,MAAMX,EAAWuD,EAASG,QAAQC,WAI/BxC,IACCnB,EAAS4D,aAAa,YACtB5D,EAASoB,iBAAiBpB,EAAS4D,aAAa,YAAY,KACxDzC,IAAW,KAAK,KAKxB/D,KAAKiC,UAAUzB,KAAK,CAAE,OAAQoC,EAAS4D,aAAa,QAAS5D,SAAUA,EAAU6D,OAAQ,OAEzFzG,KAAKkC,aAAa1B,KAAK,CACnB,OAAQoC,EAAS4D,aAAa,QAC9B,WAAa5D,EAAS4D,aAAa,YACnC,UAAW5D,EAAS4D,aAAa,YAAc,KAC/C,UAAW5D,EAAS4D,aAAa,YAAc,KAC/C,WAAY5D,EAAS4D,aAAa,aAAe,KACjD,UAAW5D,EAAS4D,aAAa,YAAc,KAC/CE,MAAO1G,KAAKiC,UAAUrB,OAAS,EAC/B+F,MAAO/D,EAASgE,UAChBC,GAAIjE,EAAS4D,aAAa,MAC1BnF,KAAMuB,EAASkE,QACflD,OAAQA,GAAU,GAClBF,MAAQyB,EAAWzB,OAAS,GAC5B+C,OAAS7D,EAAS4D,aAAa,UAAY,KAC3CzC,SAAUA,GAAY,KACtBG,aAAcA,GAAgB,KAC9BgB,gBAAiBA,GAAmB,OAKxC,IAAI6B,EAASX,SAASY,cAAchH,KAAKmC,MAYzC,OAVGnC,KAAK6C,iBAAiBD,EAAS4D,aAAa,aAAa5D,SACxDmE,EAAS/G,KAAK6C,iBAAiBD,EAAS4D,aAAa,aAAa5D,SAC5DA,EAAS4D,aAAa,aAC5BO,EAASX,SAASY,cAAcpE,EAAS4D,aAAa,aAG1DO,EAAOE,YAAYrE,GACnB5C,KAAK2D,eAAeC,GAGbhB,GAAY,IACvB,CAEAsE,OAAS,KACLlH,KAAKkC,aAAa4C,SAAQqC,IAgBtB,GAfGA,EAAK,aAAgC,IAAlBA,EAAK,UACC,UAArBA,EAAK,aACPnH,KAAKiE,qBAAqBkD,EAAK,SAIjCA,EAAK,YAILA,EAAK,YACJnH,KAAKiE,qBAAqBkD,EAAK,YAIhCA,EAAsB,gBAAG,CACxBxG,QAAQqE,IAAI,OASZ,IAAItB,EAAQyD,EAAsB,kBAE/BzD,IAGC/C,QAAQqE,IAAImC,EAAK,SACjBxG,QAAQqE,IAAI,YACZrE,QAAQqE,IAAItB,GAEZ1D,KAAK+E,iBAAiBoC,EAAK,QAASzD,GAE5C,IACF,GAgQN0D,SAzPa,CAACC,EAAG1E,EAAK2E,EAAWT,KACjC,IAAIM,EAAOxE,EAAIwE,KAKXI,EAAS,CACT,WAAYJ,EAAKX,aAAa,aAAe,KAC7C,UAAYW,EAAKX,aAAa,WAAW3B,MAAM,KAAK2C,KAAIC,GAAOZ,EAAKY,IAAKC,KAAK,MAAQ,KACtF,OAASP,EAAKX,aAAa,QAAQ3B,MAAM,KAAK2C,KAAIC,GAAOZ,EAAKY,IAAKC,KAAK,MAAQ,KAChF,UAAWP,EAAKX,aAAa,YAAc,KAC3CG,MAAOQ,EAAKX,aAAa,UAAY,KACrCK,GAAKM,EAAKX,aAAa,OAAS,KAChCmB,MAAQR,EAAKX,aAAa,UAAY,KACtCoB,KAAOT,EAAK1C,QAAQC,cACpBhB,MAAOyD,EAAKzD,OAAS,MAGzB,MAAMmE,EAAa,OAGnB,IAAIC,EAAY,CACZ/D,SAAUoD,EAAKX,aAAa,YAAcc,EAAUH,EAAKX,aAAa,aAAeqB,EACrF3D,aAAciD,EAAKX,aAAa,gBAAkBc,EAAUH,EAAKX,aAAa,iBAAmBqB,EACjG3C,gBAAiBiC,EAAKX,aAAa,mBAAqBc,EAAUH,EAAKX,aAAa,oBAAsBqB,GAI9GV,EAAKY,SAGLR,EAAShG,OAAOyG,YAAYzG,OAAOuE,QAAQyB,GAAQU,QAAO,EAAEC,EAAKxE,KAAqB,OAAVA,KAIzD,UAAhB6D,EAAOK,KACNP,EAAEpC,KAAK,IAAIsC,EAAOK,QAAQrG,OAAOuE,QAAQyB,GAAQC,KAAI,EAAEU,EAAKxE,KAAW,GAAGwE,MAAQxE,OAAUgE,KAAK,eAAgBP,EAAKzD,UACtHoE,EAAU/D,SACV+D,EAAU5D,aACV4D,EAAU5C,iBAEVmC,EAAEpC,KAAK,IAAIsC,EAAOK,QAAQrG,OAAOuE,QAAQyB,GAAQC,KAAI,EAAEU,EAAKxE,KAAW,GAAGwE,MAAQxE,OAAUgE,KAAK,QAASP,EAAKxC,cAAe4C,EAAOK,QACjIE,EAAU/D,SACV+D,EAAU5D,aACV4D,EAAU5C,gBAClB,EA6MAiD,YAvIJ,MACI,WAAApI,CAAY4C,EAAKyF,GACbpI,KAAKqI,MAAQ,GACbrI,KAAKK,IAAMiI,OAAOC,SAASC,SAAW,KAAOF,OAAOC,SAASE,KAC7DzI,KAAK0I,OAAS/F,EAAI+F,OAClB1I,KAAK2I,OAAShG,EAAIgG,OAClB3I,KAAK4I,aAAe,IAAI9I,EACxBE,KAAKoI,WAAaA,CACtB,CAEA,UAAAS,CAAWxI,EAAKgB,GACZ,MAAMqF,EAAQ1G,KAAKqI,MAAMS,WAAUhH,GAAQA,EAAKzB,MAAQA,IAEpDqG,GAAS,EACT1G,KAAKqI,MAAM3B,GAAOrF,KAAOA,EAEzBrB,KAAKqI,MAAM7H,KAAK,CAAEH,MAAKgB,QAE/B,CAGA,OAAA0H,CAAQ1I,GAAO,OAAOL,KAAKqI,MAAM3F,MAAKZ,GAAQA,EAAKzB,MAAQA,GAAM,CAGjE,MAAA2I,CAAO3I,GAAO,OAAOL,KAAKqI,MAAMY,MAAKnH,GAAQA,EAAKzB,MAAQA,GAAqB,OAAdyB,EAAKT,WAA+BmC,IAAd1B,EAAKT,MAAoC,KAAdS,EAAKT,MAAc,CAGrI,UAAA6H,CAAW7I,GAAOL,KAAKqI,MAAQrI,KAAKqI,MAAMJ,QAAOnG,GAAQA,EAAKzB,MAAQA,GAAM,CAG5E,KAAA8I,GAAUnJ,KAAKqI,MAAQ,EAAI,CAC3B,WAAAe,GAAgB,OAAOpJ,KAAKqI,KAAO,CAEnCgB,aAAe,CAACvB,EAAWwB,KAEvBxB,EAAUhD,SAAQf,IACdA,EAASuF,EAAa,GACxB,EAMN,WAAAC,CAAYlI,GAIZ,CAGA,YAAAmI,CAAanJ,GACTL,KAAK4I,aAAaxI,QAAQC,EAAKL,KAAKyJ,gBAAgBC,KAAK1J,MAC7D,CAEA,eAAAyJ,CAAgBpI,GASZ+E,SAASY,cAAchH,KAAK2I,QAAQhE,UAAU,GAE9C,IAEIgF,GAFS,IAAIC,WACAC,gBAAgBxI,EAAM,aACf2F,cAAchH,KAAK0I,QAc3C,OAZIiB,EACAvD,SAASY,cAAchH,KAAK2I,QAAQ1B,YAAY0C,EAAcG,WAAU,IAExEnJ,QAAQD,MAAM,4BAGlBV,KAAKqJ,aAAarJ,KAAKoI,aAMhB,CACX,GAsDA2B,KAVS,KAAO,CAAC,MAAM,KAAK,KAAK,KAAK,MAAMtG,QAAQ,UAAUuG,IAAMA,EAAIC,OAAOC,gBAAgB,IAAIC,WAAW,IAAI,GAAK,IAAMH,EAAI,GAAGI,SAAS,MAW7IC,eA/CJ,MACI,WAAAtK,CAAYuK,GACRtK,KAAKsK,eAAiBA,EACtBtK,KAAKuK,QAAUvK,KAAKwK,WACxB,CAEA,SAAAA,GACI,MAAM,eAAEF,GAAmBtK,KAE3B,IAAKsK,IAAmBA,EAAexD,QAAQ2D,IAAK,OAAO,KAE3D,MAAQA,IAAKC,GAAgBJ,EAAexD,QACtC6D,EAAeC,MAAMC,KAAKP,EAAeQ,iBAAiB,SAEhE,IAAKH,EAAa/J,OAAQ,OAAO,KAEjC,MAAMmK,EAAaJ,EAAaK,QAAO,CAACC,EAAKC,KACzC,MAAQC,WAAY7H,EAAY,MAAEI,GAAUwH,EAAYpE,QAExD,OADAmE,EAAI3H,GAAgBI,EACbuH,CAAG,GACX,CAAC,GAEJ,OAAO,IAAIG,IAAI,CAAC,CAACV,EAAaK,IAClC,CAEA,MAAAM,CAAO/H,EAAcgI,GACjB,IAAKtL,KAAKuK,QAAS,OAAOe,EAE1B,MAAMC,EAAgBvL,KAAKuK,QAAQiB,IAAIxL,KAAKsK,eAAexD,QAAQ2D,KACnE,OAAKc,QAEkC/H,IAAhC+H,EAAcjI,GAA8BiI,EAAcjI,GAFtCgI,CAG/B,MCrnBAG,EAA2B,CAAC,GAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBnI,IAAjBoI,EACH,OAAOA,EAAahK,QAGrB,IAAID,EAAS8J,EAAyBE,GAAY,CAGjD/J,QAAS,CAAC,GAOX,OAHAiK,EAAoBF,GAAUhK,EAAQA,EAAOC,QAAS8J,GAG/C/J,EAAOC,OACf,ECnB0B8J,CAAoB","sources":["webpack://swift-swap/./src/PageFlow.js","webpack://swift-swap/webpack/bootstrap","webpack://swift-swap/webpack/startup"],"sourcesContent":["// import './PageFlow.scss';\n\n// Linear DOM\nclass PageFlow {\n    constructor(page, { ...variables }) {\n        this._pageFlow = []; // Pages\n        this._elemFlow = []; // Elements\n        this._elemFlowRef = []; // Elements Reference\n        this._app = page; // asign _app\n        this._variables = variables;\n\n        // if(retainValue === false) {\n        //     this._variables = Object.assign({}, variables);;\n        // }\n\n        // if(retainValue === true) {\n        //     this._variables = variables;\n        // }\n\n        return [this, variables]; // Return this, and additional properties\n    }\n\n    // Function to find Ref in Array, technically a cache finder\n    // that finds an existing element\n    _findRef(input) {\n        // Convert input to string to handle both number and string inputs\n        const searchString = String(input);\n        // Use the find method to search for the object with matching ref property\n        let ref = this._elemFlow.find(obj => String(obj.ref) === searchString);\n        \n        return ref?.selector ?? null;\n    }\n\n    _findObjectByRef = (refValue) => {\n        // Use the find method to search for the object with matching ref property\n        return this._elemFlow.find(obj => obj['@ref'] === refValue);\n    };\n\n    _findRefObjectByRef = (refValue) => {\n        // Use the find method to search for the object with matching ref property\n        return this._elemFlowRef.find(obj => obj['@ref'] === refValue);\n    };\n\n\n    _getValue(str)  {\n        const pattern = /{{\\s*(.*?)\\s*}}/;\n        let result = str;\n\n        const match = str.match(pattern);\n        let variableValue;\n\n        if (match) {\n            const variableName = match[1].trim();\n            variableValue = this._variables[variableName];\n\n    \n            if (variableValue !== undefined) {\n                result = str.replace(pattern, variableValue);\n            } else {\n                result = null; // Variable not found\n            }\n        }\n\n        return { result: result, value: variableValue };\n      };\n      \n\n    // Handle the @update attribute\n    _eventListener = (string) => {\n        // Get Ref\n        const ref = /@ref=\"([^\"]*)\"/;\n        const refmatch = string.match(ref);\n        const refValue = refmatch ? refmatch[1] : null;\n\n        // Get Value\n        const regex = /@trigger=\"([^\"]*)\"/;\n        const match = string.match(regex);\n        const value = match ? match[1] : null;\n\n        // Get Ref\n        const renderRef = /@render=\"([^\"]*)\"/;\n        const renderRefmatch = string.match(renderRef);\n        const renderRefValue = renderRefmatch ? renderRefmatch[1] : null;\n\n        // on RUN event\n        if(value === 'run') {\n            callback(this._findObjectByRef(refValue)?.selector); // Render event by @ref\n        } \n\n        // on CLICK event\n        if(value === 'click') {\n            this._findObjectByRef(refValue)?.selector.addEventListener('click', () => { this._renderEventListener(refValue);  }) // Render event by @ref + @trigger\n        }\n\n        // on INPUT field (key up) Event\n        if(value === 'input') {\n            this._findObjectByRef(refValue)?.selector.addEventListener('keyup', () => { this._renderEventListener(refValue);  }) // Render event by @ref + @trigger\n        }\n    };\n\n\n    _renderEventListener = (refValue) => {\n        let callback = this._findRefObjectByRef(refValue)?.callback;\n        let postcallback = this._findRefObjectByRef(refValue)?.postcallback;\n        let defaultcallback = this._findRefObjectByRef(refValue)?.defaultcallback;\n        let string = this._findRefObjectByRef(refValue).string;\n        // Chain for Re Rendering Elements\n        let modifyStartValue = null;\n        let modifyEndValue = null;\n\n        if(callback) {\n            let result = callback(this._findObjectByRef(refValue)?.selector);\n            if(!result) {\n                \n            } else {\n                modifyStartValue = result; \n            }\n        }\n\n\n        this._htmlChange(string, modifyStartValue);\n        \n        \n       \n        if(postcallback) {\n            let result = postcallback(this._findObjectByRef(refValue)?.selector);\n            if(!result) {\n                return false;\n            } else {\n                modifyEndValue = result;\n            }\n        }\n\n        this._updateAttribute(string, modifyEndValue);\n\n        \n\n\n    \n    }\n\n\n    // Process HTML change\n    _htmlChange = (string, getValue) => { \n        const regex = /@ref=\"([^\"]*)\"/;\n        const match = string.match(regex);\n        const refValue = match ? match[1] : null;\n\n        // if no getValue then attempt to get the string\n        if(!getValue) {\n            getValue =  this._getFullString(string).value;\n        }\n\n        // Return if get value is undefinde, as it'll print undefined\n        if(getValue === undefined) {\n            return;\n        }\n        \n        if(this._getFullString(string).value !== this._findRefObjectByRef(refValue)?.value) {\n\n            if(this._findRefObjectByRef(refValue)?.value) {\n                // this._findRefObjectByRef(refValue).value = fullString.value;\n\n                if ( this._findObjectByRef(refValue)?.selector?.tagName.toLowerCase() === 'input') {\n                    this._findRefObjectByRef(refValue).value =  getValue\n                    this._findObjectByRef(refValue).selector.value = getValue\n                } else {\n                    this._findRefObjectByRef(refValue).value = getValue\n                    this._findObjectByRef(refValue).selector.innerHTML = getValue\n                }\n            }\n        };\n    };\n\n\n    _getFullString = (string) => {\n        if(this._getValue(string)) {\n            return this._getValue(string);\n        }\n\n        return null;\n    };\n\n\n    // Update Attribute @update=\"1,2\"\n    _updateAttribute = (string, newValue = null) => {\n        const regex = /@update=\"([^\"]*)\"/;\n        const match = string.match(regex);\n        const refValue = match ? match[1] : null;\n\n        if(refValue == null) { return }\n        let updateItems = refValue.split(',');\n\n        updateItems.forEach(ref => {\n            this._htmlChangeByRef(ref, newValue);\n        });\n    };\n\n\n\n\n    _htmlChangeByRef = (refValue, newValue) => { \n        if(!newValue) {\n            newValue = this._getFullString().value;\n        }\n\n        if(!this._findObjectByRef(refValue)) {\n            return;\n        }\n        \n        if(this._findRefObjectByRef(refValue)?.value !== null) {\n            \n            if (this._findObjectByRef(refValue)?.selector?.tagName.toLowerCase() === 'input') {\n                // Input\n                this._findRefObjectByRef(refValue).value =  newValue;\n                this._findObjectByRef(refValue).selector.value =  newValue;\n            } else {\n                // HTML\n                this._findRefObjectByRef(refValue).value = newValue;\n                this._findObjectByRef(refValue).selector.innerHTML = newValue;\n            }\n        } else {\n            console.log('refValue does not exist');\n        }\n    }\n\n    node(string, callback = null, postcallback = null, defaultcallback = null) {\n        // Convert Inner HTML\n        // Convert {{ }} in to <div></div>\n        let fullString = this._getFullString(string);\n\n        // Load HTML changes\n        this._htmlChange(string);\n\n        // If strings already exist and haven't been changed, do not run function\n        // IF string matches anything inside of  this._elemFlowRef string\n        const noChange = (() => { \n            const matchedObject = this._elemFlowRef.find(obj => obj.string === string);\n\n            if(matchedObject) {\n                return this._findObjectByRef(matchedObject['@ref'])?.selector;\n            }\n        })();\n\n        // Extract String Data\n       const extractAttributes = (() => {\n            const pattern = /(?:class|data-\\w+|@ref|@trigger|@update)=\"([^\"]*)\"/g;\n            const matches = string.match(pattern) || [];\n            const attributes = {};\n\n            matches.forEach(match => {\n                const [attributeName, attributeValue] = match.split('=');\n                attributes[attributeName] = attributeValue.replace(/\"/g, ''); // Remove surrounding quotes\n            });\n\n            return attributes;\n        })();\n\n\n        // Extract String Data\n        const extractHTML = (() => {\n            const contentPattern = /<div[^>]*>([^<]*)<\\/div>/;\n            const contentMatch = contentPattern.exec(string);\n            const content = contentMatch ? contentMatch[1].trim() : null;\n\n            return content;\n        })();\n\n\n        // Replace Objects with updated values;\n        const foundObject = this._findObjectByRef(extractAttributes['@ref']);\n        if (foundObject) {\n            const { selector } = foundObject;\n            const attributesToSet = {};\n        \n            for (const [attributeName, attributeValue] of Object.entries(extractAttributes)) {\n                if (attributeName.startsWith('@')) {\n                    // Set attribute using setAttributeNodeNS for names starting with '@'\n                    attributesToSet[attributeName.slice(1)] = attributeValue;\n                } else {\n                    // For other attribute names, use setAttribute directly\n                    attributesToSet[attributeName] = attributeValue;\n                }\n            }\n        \n            // Set all attributes at once\n            Object.entries(attributesToSet).forEach(([name, value]) => {\n                if(name === 'ref' || name === 'trigger' || name === 'update') { return } // Avoid changing @ref or @trigger values (These are static)\n                selector.setAttribute(name, value);\n            });\n\n            return selector; \n        }\n\n        // Buld HTML out of string\n        const template = document.createElement('template');\n        template.innerHTML = fullString.result.trim();\n        const selector = template.content.firstChild;\n\n    \n   \n        if(callback) {\n            selector.getAttribute('@trigger')\n            selector.addEventListener(selector.getAttribute('@action'), () => {\n                callback?.(null);\n            })\n        }\n      \n        // Add References\n        this._elemFlow.push({ '@ref': selector.getAttribute('@ref'), selector: selector, update: null }); // update enqueues update\n\n        this._elemFlowRef.push({ \n            '@ref': selector.getAttribute('@ref'), \n            '@trigger' : selector.getAttribute('@trigger'), \n            '@update': selector.getAttribute('@update') ?? null, \n            '@render': selector.getAttribute('@render') ?? null, \n            '@initial': selector.getAttribute('@initial') ?? null, \n            '@parent': selector.getAttribute('@parent') ?? null, \n            index: this._elemFlow.length - 1,\n            class: selector.classList, \n            id: selector.getAttribute('id'),\n            data: selector.dataset, \n            string: string ?? '',\n            value : fullString.value ?? '',\n            update:  selector.getAttribute('@load') ?? null,\n            callback: callback ?? null,\n            postcallback: postcallback ?? null,\n            defaultcallback: defaultcallback ?? null\n        }); // add Reference Value xand Index\n\n   \n        // Target Location (RENDER INITIAL ELEMENT);\n        let parent = document.querySelector(this._app);\n\n        if(this._findObjectByRef(selector.getAttribute('@parent'))?.selector) {\n            parent = this._findObjectByRef(selector.getAttribute('@parent'))?.selector\n        } else if(selector.getAttribute('@parent')) {\n            parent = document.querySelector(selector.getAttribute('@parent'))\n        } \n\n        parent.appendChild(selector);\n        this._eventListener(string);\n\n\n        return selector ?? null;\n    }\n\n    render = () => {\n        this._elemFlowRef.forEach(item => {\n            if(item['@update'] && item['@load'] !== false) {\n                if(item['@trigger'] !== 'click') {\n                 this._renderEventListener(item['@ref']); // Trigger Referenced Items\n                }\n            }\n\n            if(item['@trigger'] === 'click') {\n                // this._renderEventListener(item['@ref']);\n            }\n\n            if(item['@render']) {\n                this._renderEventListener(item['@render']);\n            }\n\n            // Render Initial Value\n            if(item['defaultcallback']) {\n                console.log('run');\n                // this._htmlChangeByRef(item['@ref'], item['@initial']);\n\n                 // Update variables to be the value specified in '@initial'\n               \n                 // Update variables to be the value specified in '@initial'\n                //  \n                 // Update the HTML using initial variables\n\n                let value = item['defaultcallback']();\n\n                if(value) {\n             \n\n                    console.log(item['@ref']);\n                    console.log('has VaLu');\n                    console.log(value);\n                    // Issue running this function\n                    this._htmlChangeByRef(item['@ref'], value);\n                }\n            }\n        });\n\n\n    }\n}\n\n\nconst HTMLflow = (_, obj, functions, id) => {\n    let item = obj.item;\n\n   \n\n    // Define Values\n    let object = {\n        '@trigger': item.getAttribute('@trigger') ?? null,\n        '@update':  item.getAttribute('@update').split(',').map(num => id + num).join(',') ?? null,\n        '@ref':  item.getAttribute('@ref').split(',').map(num => id + num).join(',') ?? null,\n        '@parent': item.getAttribute('@parent') ?? null,\n        class: item.getAttribute('class') ?? null,\n        id:  item.getAttribute('id') ?? null,\n        style:  item.getAttribute('style') ?? null,\n        type : item.tagName.toLowerCase(),\n        value: item.value ?? null,\n    }\n\n    const noCallback = () => {} // Cover the scenario that nocallback exists\n\n    // Define callbacks\n    let callbacks = {\n        callback: item.getAttribute('callback') ? functions[item.getAttribute('callback')] : noCallback,\n        postcallback: item.getAttribute('postcallback') ? functions[item.getAttribute('postcallback')] : noCallback,\n        defaultcallback: item.getAttribute('defaultcallback') ? functions[item.getAttribute('defaultcallback')] : noCallback\n    }\n\n    // Remove all Items\n    item.remove();\n\n    // Filter out properties with null values\n    object = Object.fromEntries(Object.entries(object).filter(([key, value]) => value !== null));\n\n  \n    // Create new Node\n    if(object.type === 'input') {\n        _.node(`<${object.type} ${Object.entries(object).map(([key, value]) => `${key}=\"${value}\"`).join(' ')} value=\"${ item.value }\">`,\n        callbacks.callback,\n        callbacks.postcallback, \n        callbacks.defaultcallback); // Need to write callbacks.defaults here\n    } else {\n        _.node(`<${object.type} ${Object.entries(object).map(([key, value]) => `${key}=\"${value}\"`).join(' ')}>${ item.innerHTML }</${object.type}>`,\n            callbacks.callback,\n            callbacks.postcallback,\n            callbacks.defaultcallback);  // Need to write callbacks.defaults here\n    }\n}\n\n\n\n// const requestQueue = new RequestQueue();\n// requestQueue.enqueue(url1, this._renderPage.bind(this));\n// requestQueue.enqueue(url2, this._renderPage.bind(this));\n// requestQueue.cancelAll();\n\nclass RequestQueue {\n    constructor() {\n        this.queue = [];\n        this.abortController = new AbortController();\n    }\n\n    async enqueue(url, renderFunction) {\n        const request = { url: url, renderFunction };\n\n        this.queue.push(request);\n\n        try {\n            await this.processQueue();\n        } catch (error) {\n            console.error('Error processing request queue:', error);\n        }\n    }\n\n    async processQueue() {\n        while (this.queue.length > 0) {\n            const { url, renderFunction } = this.queue.shift();\n            const { signal } = this.abortController;\n\n            try {\n                const response = await fetch(url, { signal });\n\n                if (!response.ok) {\n                    throw new Error(`Failed to fetch data from ${url}. Status: ${response.status} ${response.statusText}`);\n                }\n\n                // const contentType = response.headers.get('content-type');\n                // if (!contentType || !contentType.includes('application/json')) {\n                //     throw new Error(`Invalid content type received from ${url}. Expected JSON.`);\n                // }\n\n                const data = await response.text();\n\n                if (!data || Object.keys(data).length === 0) {\n                    throw new Error(`No valid data received from ${url}`);\n                }\n\n                renderFunction(data);\n            } catch (error) {\n                console.error(`Error while fetching or rendering data from ${url}:`, error);\n            }\n        }\n    }\n\n    cancelAll() {\n        this.abortController.abort();\n        this.abortController = new AbortController();\n        this.queue = [];\n    }\n}\n\n\n\n// const dynamicPage = new DynamicPage({ source: '.selector', target: '.selector' }, renderList));\n// cons dynamicPage._makeRequest(url);\n\nclass DynamicPage {\n    constructor(obj, renderList) {\n        this.cache = [];\n        this.url = window.location.protocol + \"//\" + window.location.host;\n        this.source = obj.source;\n        this.target = obj.target;\n        this.requestQueue = new RequestQueue();\n        this.renderList = renderList;\n    }\n    // Adds or updates a page in the cache\n    upsertPage(url, data) {\n        const index = this.cache.findIndex(page => page.url === url);\n\n        if (index > -1) {\n            this.cache[index].data = data;\n        } else {\n            this.cache.push({ url, data });\n        }\n    }\n\n    // Retrieves a page from the cache\n    getPage(url) { return this.cache.find(page => page.url === url); }\n\n    // Checks if a page exists in the cache\n    exists(url) { return this.cache.some(page => page.url === url && page.data !== null && page.data !== undefined && page.data !== ''); }\n    \n    // Removes a page from the cache\n    removePage(url) { this.cache = this.cache.filter(page => page.url !== url); }\n\n    // Clears the entire cache\n    clear() { this.cache = []; }\n    getAllPages() { return this.cache; }\n\n    runCallbacks = (callbacks, callbackArgs) => {\n    \n        callbacks.forEach(callback => {\n            callback(callbackArgs);\n        });\n    }\n    \n   \n\n    // Render the new Page Data\n    _renderPage(data) {\n       \n    \n       \n    }\n\n    // Request Page from URL (HTTP REQUEST)\n    _makeRequest(url) {\n        this.requestQueue.enqueue(url, this._processRequest.bind(this) );\n    }\n\n    _processRequest(data) {\n\n        // if (this.target) {\n        //     const childElements =  document.querySelector(this.target).querySelectorAll('*');\n        //     childElements.forEach(child => {\n        //         child.parentNode.removeChild(child);\n        //     });\n        // }\n\n        document.querySelector(this.target).innerHTML='';\n        \n        let parser = new DOMParser();\n        let doc = parser.parseFromString(data, \"text/html\");\n        let sourceElement = doc.querySelector(this.source);\n        \n        if (sourceElement) {\n            document.querySelector(this.target).appendChild(sourceElement.cloneNode(true));\n        } else {\n            console.error(\"Source element not found\");\n        }\n   \n        this.runCallbacks(this.renderList);\n        \n       \n    \n      \n\n        return true;\n    }\n\n}\n\n// This is how to use DatasetHandler\n// const datasetHandler = new DatasetHandler(document.querySelector('dataset'));\n// const dataset = datasetHandler.parseData();\n\nclass DatasetHandler {\n    constructor(datasetElement) {\n        this.datasetElement = datasetElement;\n        this.dataMap = this.parseData();\n    }\n\n    parseData() {\n        const { datasetElement } = this;\n        \n        if (!datasetElement || !datasetElement.dataset.set) return null;\n\n        const { set: datasetName } = datasetElement.dataset;\n        const dataElements = Array.from(datasetElement.querySelectorAll('data'));\n\n        if (!dataElements.length) return null;\n\n        const dataObject = dataElements.reduce((acc, dataElement) => {\n            const { collection: variableName, value } = dataElement.dataset;\n            acc[variableName] = value;\n            return acc;\n        }, {});\n\n        return new Map([[datasetName, dataObject]]);\n    }\n\n    getVar(variableName, defaultValue) {\n        if (!this.dataMap) return defaultValue;\n\n        const datasetObject = this.dataMap.get(this.datasetElement.dataset.set);\n        if (!datasetObject) return defaultValue;\n\n        return datasetObject[variableName] !== undefined ? datasetObject[variableName] : defaultValue;\n    }\n}\n\n\nconst uuid = () => ([1e3]+-1e2+-4e2+-8e2+-1e12).replace(/[018]/g, c => (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16));\n\n\n// export { PageFlow, HTMLflow, DynamicPage, uuid };\n\n\nmodule.exports = {\n    PageFlow,\n    HTMLflow,\n    DynamicPage,\n    uuid,\n    DatasetHandler\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./src/PageFlow.js\");\n"],"names":["RequestQueue","constructor","this","queue","abortController","AbortController","enqueue","url","renderFunction","request","push","processQueue","error","console","length","shift","signal","response","fetch","ok","Error","status","statusText","data","text","Object","keys","cancelAll","abort","module","exports","PageFlow","page","variables","_pageFlow","_elemFlow","_elemFlowRef","_app","_variables","_findRef","input","searchString","String","ref","find","obj","selector","_findObjectByRef","refValue","_findRefObjectByRef","_getValue","str","pattern","result","match","variableValue","variableName","trim","undefined","replace","value","_eventListener","string","refmatch","renderRefmatch","callback","addEventListener","_renderEventListener","postcallback","modifyStartValue","modifyEndValue","_htmlChange","_updateAttribute","getValue","_getFullString","tagName","toLowerCase","innerHTML","newValue","split","forEach","_htmlChangeByRef","log","node","defaultcallback","fullString","matchedObject","extractAttributes","matches","attributes","attributeName","attributeValue","foundObject","contentMatch","exec","attributesToSet","entries","startsWith","slice","name","setAttribute","template","document","createElement","content","firstChild","getAttribute","update","index","class","classList","id","dataset","parent","querySelector","appendChild","render","item","HTMLflow","_","functions","object","map","num","join","style","type","noCallback","callbacks","remove","fromEntries","filter","key","DynamicPage","renderList","cache","window","location","protocol","host","source","target","requestQueue","upsertPage","findIndex","getPage","exists","some","removePage","clear","getAllPages","runCallbacks","callbackArgs","_renderPage","_makeRequest","_processRequest","bind","sourceElement","DOMParser","parseFromString","cloneNode","uuid","c","crypto","getRandomValues","Uint8Array","toString","DatasetHandler","datasetElement","dataMap","parseData","set","datasetName","dataElements","Array","from","querySelectorAll","dataObject","reduce","acc","dataElement","collection","Map","getVar","defaultValue","datasetObject","get","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__"],"sourceRoot":""}